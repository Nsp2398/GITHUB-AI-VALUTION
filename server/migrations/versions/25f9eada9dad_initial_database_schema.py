"""Initial database schema

Revision ID: 25f9eada9dad
Revises: 
Create Date: 2025-08-07 12:04:55.856998

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '25f9eada9dad'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.String(length=36), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_uuid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_table('companies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_uuid', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('industry', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('stage', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('revenue', sa.Float(), nullable=True),
    sa.Column('expenses', sa.Float(), nullable=True),
    sa.Column('ebitda', sa.Float(), nullable=True),
    sa.Column('growth_rate', sa.Float(), nullable=True),
    sa.Column('profit_margin', sa.Float(), nullable=True),
    sa.Column('employees', sa.Integer(), nullable=True),
    sa.Column('ucaas_metrics', sa.JSON(), nullable=True),
    sa.Column('valuation_inputs', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_uuid')
    )
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=False)
    op.create_table('file_uploads',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('file_uuid', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('extracted_data', sa.JSON(), nullable=True),
    sa.Column('processing_status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_uuid')
    )
    op.create_table('valuations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('valuation_uuid', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('valuation_date', sa.DateTime(), nullable=False),
    sa.Column('method_used', sa.String(length=50), nullable=False),
    sa.Column('valuation_results', sa.JSON(), nullable=True),
    sa.Column('dcf_value', sa.Float(), nullable=True),
    sa.Column('ucaas_metrics_value', sa.Float(), nullable=True),
    sa.Column('ai_powered_value', sa.Float(), nullable=True),
    sa.Column('market_comparables_value', sa.Float(), nullable=True),
    sa.Column('final_valuation', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('discount_rate', sa.Float(), nullable=True),
    sa.Column('terminal_growth_rate', sa.Float(), nullable=True),
    sa.Column('projection_years', sa.Integer(), nullable=True),
    sa.Column('ai_recommendations', sa.JSON(), nullable=True),
    sa.Column('market_data', sa.JSON(), nullable=True),
    sa.Column('report_generated', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('valuation_uuid')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('report_uuid', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('valuation_id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.String(length=20), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('report_metadata', sa.JSON(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.Column('downloaded_at', sa.DateTime(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['valuation_id'], ['valuations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reports')
    op.drop_table('valuations')
    op.drop_table('file_uploads')
    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.drop_table('companies')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
